---
# ConfigMap for Cloudflare Tunnel Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflared-config
  namespace: ldap-jwt-app
data:
  config.yaml: |
    tunnel: ldap-jwt-auth-tunnel
    credentials-file: /etc/cloudflared/credentials.json
    metrics: 0.0.0.0:2000
    # Configure ingress rules for WebSocket support
    ingress:
      # Frontend service (React app)
      - hostname: "*.trycloudflare.com"
        path: /api/*
        service: http://backend-service:8000
        originRequest:
          # Enable WebSocket support
          noTLSVerify: true
          httpHostHeader: backend-service
      - hostname: "*.trycloudflare.com"
        service: http://frontend-service:80
        originRequest:
          # Enable WebSocket support
          noTLSVerify: true
          httpHostHeader: frontend-service
      # Catch-all rule (required)
      - service: http_status:404

---
# Secret for Cloudflare credentials (empty by default - will be populated)
apiVersion: v1
kind: Secret
metadata:
  name: cloudflared-credentials
  namespace: ldap-jwt-app
type: Opaque
data:
  credentials.json: e30K  # Empty JSON object "{}" base64 encoded

---
# ServiceAccount for tunnel pod
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudflared
  namespace: ldap-jwt-app

---
# Deployment for Cloudflare Tunnel
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-tunnel
  namespace: ldap-jwt-app
  labels:
    app: cloudflared-tunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared-tunnel
  template:
    metadata:
      labels:
        app: cloudflared-tunnel
    spec:
      serviceAccountName: cloudflared
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        imagePullPolicy: Always
        args:
          - tunnel
          - --config
          - /etc/cloudflared/config.yaml
        env:
        - name: TUNNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: tunnel-secrets
              key: token
              optional: true
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared
          readOnly: true
        - name: credentials
          mountPath: /etc/cloudflared/credentials.json
          subPath: credentials.json
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 2000
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: 2000
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: cloudflared-config
      - name: credentials
        secret:
          secretName: cloudflared-credentials
      restartPolicy: Always

---
# Service for tunnel metrics (optional)
apiVersion: v1
kind: Service
metadata:
  name: cloudflared-metrics
  namespace: ldap-jwt-app
  labels:
    app: cloudflared-tunnel
spec:
  selector:
    app: cloudflared-tunnel
  ports:
  - name: metrics
    port: 2000
    targetPort: 2000
  type: ClusterIP

---
# Secret for tunnel token (to be populated manually)
apiVersion: v1
kind: Secret
metadata:
  name: tunnel-secrets
  namespace: ldap-jwt-app
type: Opaque
data:
  token: ""  # Will be populated with base64 encoded tunnel token 