---
# Deployment for localtunnel (no auth required)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: localtunnel
  namespace: ldap-jwt-app
  labels:
    app: localtunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: localtunnel
  template:
    metadata:
      labels:
        app: localtunnel
    spec:
      containers:
      - name: localtunnel-frontend
        image: node:18-alpine
        command:
          - sh
          - -c
          - |
            npm install -g localtunnel &&
            lt --port 80 --host http://frontend-service --subdomain ldap-jwt-frontend --print-requests
        env:
        - name: DEBUG
          value: "lt:*"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "pgrep -f 'lt --port'"
          periodSeconds: 30
          failureThreshold: 3
      - name: localtunnel-backend
        image: node:18-alpine
        command:
          - sh
          - -c
          - |
            npm install -g localtunnel &&
            lt --port 8000 --host http://backend-service --subdomain ldap-jwt-backend --print-requests
        env:
        - name: DEBUG
          value: "lt:*"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "pgrep -f 'lt --port'"
          periodSeconds: 30
          failureThreshold: 3
      restartPolicy: Always

---
# Simple HTTP tunnel using socat (alternative)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-tunnel
  namespace: ldap-jwt-app
  labels:
    app: simple-tunnel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-tunnel
  template:
    metadata:
      labels:
        app: simple-tunnel
    spec:
      containers:
      - name: tunnel-proxy
        image: alpine/socat:latest
        command:
          - socat
          - TCP-LISTEN:8080,fork,reuseaddr
          - TCP:frontend-service:80
        ports:
        - containerPort: 8080
          name: tunnel
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      restartPolicy: Always

---
# Service for simple tunnel
apiVersion: v1
kind: Service
metadata:
  name: simple-tunnel-service
  namespace: ldap-jwt-app
  labels:
    app: simple-tunnel
spec:
  selector:
    app: simple-tunnel
  ports:
  - name: tunnel
    port: 8080
    targetPort: 8080
    nodePort: 30090
  type: NodePort 